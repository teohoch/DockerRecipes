input {
  beats {
    port => 5044
  }
  tcp 
	{
		port => 5000
		type => debug
	}
  
}

filter 
{
	grok
	{
		match => 
		{	"message" =>
			[	
				"%{TIMESTAMP_ISO8601:syslog_timestamp} %{SYSLOGHOST:[@metadata][syslog_host]} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}",
				"%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:[@metadata][syslog_host]} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}"
			]
		}
		add_field => [ "received_at", "%{@timestamp}" ]
	}
	
	mutate
	{
		add_field => { "%{[@metadata][output_index]}" => "%{[@metadata][beat]}"}
	}
	
	if ("" in [syslog_timestamp])
	{
		mutate
		{
		    add_field => 
		    {
				"received_from" => "%{host}" 
		        "type" => "syslog"
			}
		}
	}
	
	if [type] == "syslog"
	{
		date
		{
			match => [ "syslog_timestamp", "ISO8601","MMM dd HH:mm:ss" ]
		}
		mutate 
		{
			replace => { "host" => "%{[@metadata][syslog_host]}" }
		}
		
		if [syslog_program] == "DNSimple_ip_update"
		{
			grok
			{
				patterns_dir => ["/opt/logstash/pipeline/patterns/"]
				match => 
				{
					"syslog_message" => 
						[
							"No IP change detected. Maintainign DNSimple IP records to %{IP:[DNSimple-ip-update][IP-Value]}",
							"New IP Detected. Updating DNSimple IP records to %{IP:[DNSimple-ip-update][IP]}",
							"%{STATE:[DNSimple-ip-update][state]} Updating DNSimple IP records to :%{GREEDYDATA}",
							"%{STATE:[DNSimple-ip-update][state]}",											
							"%{GREEDYDATA}"
						]
				}			
			}
			mutate
			{
				replace => { "%{[@metadata][output_index]}" => "HS-Server-IP"}
			}
					
		}
	}			
}

output {

	if ([type] == "debug")
	{
		stdout { codec => rubydebug }
	}else
	{
		elasticsearch
		{
			hosts => ["elasticsearch:9200"]
			sniffing => true
			manage_template => false    
			document_type => "%{[@metadata][type]}"	
			index => "%{[@metadata][output_index]}-%{+YYYY.MM.dd}"    
		}
	}
   
}

